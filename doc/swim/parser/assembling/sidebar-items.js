window.SIDEBAR_ITEMS = {"fn":[["assemble_data_binary","Takes the data list and finds the actual values for each data entry that will be put into memory"],["match_fp_register","This function takes a register string as an argument and returns the string of the binary of the matching floating point register or none if there is not one that matches."],["match_gp_register","This function takes a register string as an argument and returns the string of the binary of the matching general register or none if there is not one that matches."],["read_immediate","This function takes a string representation of an immediate value and the number of bits available to represent it and attempts to translate it to an actual integer. If the value cannot be cast to int or is too big to be represented by the available bits, an error is returned."],["read_label_absolute","Takes a string and returns the instruction number of the matching label in memory. If there is no match, an error is returned This value corresponds to instruction number, NOT byte address."],["read_label_relative","Returns distance to a labeled instruction relative to the instruction after the current instruction. The value represents instruction numbers NOT bytes."],["read_memory_address","Takes in a memory address and token number and returns the binary for the offset value, base register value, and any errors. If the string given matches a label, that address is returned instead"],["read_operands","This function takes an instruction whose operands it is supposed to read, the order of expected operand types and then the order these operands should be concatenated onto the binary representation of the string the function returns the instruction it was given with any errors and the binary of the operands added on."],["read_register","read_register takes the string of the register name, the token number the register is from the corresponding instruction and the expected register type. It calls the corresponding functions holding the match cases for the different register types."]]};