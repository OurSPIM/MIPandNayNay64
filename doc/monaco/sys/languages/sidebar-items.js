window.SIDEBAR_ITEMS = {"enum":[["CompletionItemInsertTextRule",""],["CompletionItemKind",""],["CompletionItemTag",""],["CompletionTriggerKind",""],["DocumentHighlightKind",""],["IndentAction",""],["InlayHintKind",""],["InlineCompletionTriggerKind",""],["SignatureHelpTriggerKind",""],["SymbolKind",""],["SymbolTag",""]],"fn":[["get_encoded_language_id",""],["get_languages","Get the information of all the registered languages."],["on_language","An event emitted when a language is needed for the first time (e.g. a model has it set). @event"],["register","Register information about a new language."],["register_code_action_provider","Register a code action provider (used by e.g. quick fix)."],["register_code_lens_provider","Register a code lens provider (used by e.g. inline code lenses)."],["register_color_provider","Register a document color provider (used by Color Picker, Color Decorator)."],["register_completion_item_provider","Register a completion item provider (use by e.g. suggestions)."],["register_declaration_provider","Register a declaration provider"],["register_definition_provider","Register a definition provider (used by e.g. go to definition)."],["register_document_formatting_edit_provider","Register a formatter that can handle only entire models."],["register_document_highlight_provider","Register a document highlight provider (used by e.g. highlight occurrences)."],["register_document_range_formatting_edit_provider","Register a formatter that can handle a range inside a model."],["register_document_range_semantic_tokens_provider","Register a document range semantic tokens provider. A semantic tokens provider will complement and enhance a simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider` or `setTokensProvider`."],["register_document_semantic_tokens_provider","Register a document semantic tokens provider. A semantic tokens provider will complement and enhance a simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider` or `setTokensProvider`."],["register_document_symbol_provider","Register a document symbol provider (used by e.g. outline)."],["register_folding_range_provider","Register a folding range provider"],["register_hover_provider","Register a hover provider (used by e.g. editor hover)."],["register_implementation_provider","Register a implementation provider (used by e.g. go to implementation)."],["register_inlay_hints_provider","Register an inlay hints provider."],["register_inline_completions_provider","Register an inline completions provider."],["register_link_provider","Register a link provider that can find links in text."],["register_linked_editing_range_provider","Register an linked editing range provider."],["register_on_type_formatting_edit_provider","Register a formatter than can do formatting as the user types."],["register_reference_provider","Register a reference provider (used by e.g. reference search)."],["register_rename_provider","Register a rename provider (used by e.g. rename symbol)."],["register_selection_range_provider","Register a selection range provider"],["register_signature_help_provider","Register a signature help provider (used by e.g. parameter hints)."],["register_tokens_provider_factory","Register a tokens provider factory for a language. This tokenizer will be exclusive with a tokenizer set using `setTokensProvider` or one created using `setMonarchTokensProvider`, but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`."],["register_type_definition_provider","Register a type definition provider (used by e.g. go to type definition)."],["set_color_map","Change the color map that is used for token colors. Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA"],["set_language_configuration","Set the editing configuration for a language."],["set_monarch_tokens_provider","Set the tokens provider for a language (monarch implementation). This tokenizer will be exclusive with a tokenizer set using `setTokensProvider`, or with `registerTokensProviderFactory`, but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`."],["set_tokens_provider","Set the tokens provider for a language (manual implementation). This tokenizer will be exclusive with a tokenizer created using `setMonarchTokensProvider`, or with `registerTokensProviderFactory`, but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`."]],"struct":[["CodeAction",""],["CodeActionContext","Contains additional diagnostic information about the context in which a code action is run."],["CodeActionList",""],["CodeActionProvider","The code action interface defines the contract between extensions and the light bulb feature."],["CodeActionProviderMetadata","Metadata about the type of code actions that a {@link CodeActionProvider} provides."],["CodeLens",""],["CodeLensList",""],["CodeLensProvider",""],["Command",""],["CommentRule","Describes how comments for a language work."],["CompletionContext","Contains additional information about the context in which {@link CompletionItemProvider.provideCompletionItems completion provider} is triggered."],["CompletionItem","A completion item represents a text snippet that is proposed to complete text that is being typed."],["CompletionItemLabel",""],["CompletionItemProvider","The completion item provider interface defines the contract between extensions and the IntelliSense."],["CompletionItemRanges",""],["CompletionList",""],["DeclarationProvider","The definition provider interface defines the contract between extensions and the go to definition and peek definition features."],["DefinitionProvider","The definition provider interface defines the contract between extensions and the go to definition and peek definition features."],["DocumentColorProvider","A provider of colors for editor models."],["DocumentFormattingEditProvider","The document formatting provider interface defines the contract between extensions and the formatting-feature."],["DocumentHighlight","A document highlight is a range inside a text document which deserves special attention. Usually a document highlight is visualized by changing the background color of its range."],["DocumentHighlightProvider","The document highlight provider interface defines the contract between extensions and the word-highlight-feature."],["DocumentRangeFormattingEditProvider","The document formatting provider interface defines the contract between extensions and the formatting-feature."],["DocumentRangeSemanticTokensProvider",""],["DocumentSemanticTokensProvider",""],["DocumentSymbol",""],["DocumentSymbolProvider","The document symbol provider interface defines the contract between extensions and the go to symbol-feature."],["EncodedTokensProvider","A “manual” provider of tokens, returning tokens in a binary form."],["EnterAction","Describes what to do when pressing Enter."],["FoldingMarkers","Describes language specific folding markers such as ‘#region’ and ‘#endregion’. The start and end regexes will be tested against the contents of all lines and must be designed efficiently:"],["FoldingRange",""],["FoldingRangeKind",""],["FoldingRangeProvider","A provider of folding ranges for editor models."],["FoldingRules","Describes folding rules for a language."],["FormattingOptions","Interface used to format a model"],["Hover","A hover represents additional information for a symbol or word. Hovers are rendered in a tooltip-like widget."],["HoverProvider","The hover provider interface defines the contract between extensions and the hover-feature."],["IAutoClosingPair",""],["IAutoClosingPairConditional",""],["IColor","A color in RGBA format."],["IColorInformation","A color range is a range in a text model which represents a color."],["IColorPresentation","String representations for a color"],["IDocComment","Definition of documentation comments (e.g. Javadoc/JSdoc)"],["IEncodedLineTokens","The result of a line tokenization."],["IExpandedMonarchLanguageAction",""],["IExpandedMonarchLanguageRule",""],["ILanguageExtensionPoint",""],["ILineTokens","The result of a line tokenization."],["ILink","A link inside the editor."],["ILinksList",""],["IMonarchLanguage","A Monarch language definition"],["IMonarchLanguageBracket","This interface can be shortened as an array, ie. [‘{’,‘}’,‘delimiter.curly’]"],["IState","The state of the tokenizer between two lines. It is useful to store flags such as in multiline comment, etc. The model will clone the previous line’s state and pass it in to tokenize the next line."],["IToken","A token."],["ImplementationProvider","The implementation provider interface defines the contract between extensions and the go to implementation feature."],["IndentationRule","Describes indentation rules for a language."],["InlayHint",""],["InlayHintLabelPart",""],["InlayHintList",""],["InlayHintsProvider",""],["InlineCompletion",""],["InlineCompletionContext",""],["InlineCompletions",""],["InlineCompletionsProvider",""],["LanguageConfiguration","The language configuration interface defines the contract between extensions and various editor features, like automatic bracket insertion, automatic indentation etc."],["LinkProvider","A provider of links."],["LinkedEditingRangeProvider","The linked editing range provider interface defines the contract between extensions and the linked editing feature."],["LinkedEditingRanges","Represents a list of ranges that can be edited together along with a word pattern to describe valid contents."],["Location","Represents a location inside a resource, such as a line inside a text file."],["LocationLink",""],["OnEnterRule","Describes a rule to be evaluated when pressing Enter."],["OnTypeFormattingEditProvider","The document formatting provider interface defines the contract between extensions and the formatting-feature."],["ParameterInformation","Represents a parameter of a callable-signature. A parameter can have a label and a doc-comment."],["ReferenceContext","Value-object that contains additional information when requesting references."],["ReferenceProvider","The reference provider interface defines the contract between extensions and the find references-feature."],["Rejection",""],["RenameLocation",""],["RenameProvider",""],["SelectedSuggestionInfo",""],["SelectionRange",""],["SelectionRangeProvider",""],["SemanticTokens",""],["SemanticTokensEdit",""],["SemanticTokensEdits",""],["SemanticTokensLegend",""],["SignatureHelp","Signature help represents the signature of something callable. There can be multiple signatures but only one active and only one active parameter."],["SignatureHelpContext",""],["SignatureHelpProvider","The signature help provider interface defines the contract between extensions and the parameter hints-feature."],["SignatureHelpResult",""],["SignatureInformation","Represents the signature of something callable. A signature can have a label, like a function-name, a doc-comment, and a set of parameters."],["TokensProvider","A “manual” provider of tokens."],["TokensProviderFactory","A factory for token providers."],["TypeDefinitionProvider","The type definition provider interface defines the contract between extensions and the go to type definition feature."],["WorkspaceEdit",""],["WorkspaceEditMetadata",""],["WorkspaceFileEdit",""],["WorkspaceFileEditOptions",""],["WorkspaceTextEdit",""]]};